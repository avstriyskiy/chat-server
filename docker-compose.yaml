services:
  db:
    image: postgres:${POSTGRES_VERSION:-latest}
    restart: on-failure
    user: ${POSTGRES_USER}
    expose:
      - "5432"
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_DB: ${CHAT_SERVER_APP_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      default:
        aliases:
          - db
    volumes:
      - db:/var/lib/postgresql/chat_server_data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "${CHAT_SERVER_APP_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s

  app:
    image: cr.selcloud.ru/avstriyskiy-personal/chat-server:${CHAT_SERVER_APP_VERSION:-latest}
    restart: on-failure
    hostname: chat-server-app
    expose:
      - "${CHAT_SERVER_APP_PORT}"
    ports:
      - "55223:${CHAT_SERVER_APP_PORT}"
    depends_on:
      db:
        condition: service_healthy
    networks:
      default:
        aliases:
          - app
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PORT: 5432
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: chat_server
      CHAT_SERVER_APP_DB: chat_server
      CHAT_SERVER_APP_PORT: ${CHAT_SERVER_APP_PORT}
      AUTH_APP_PORT: ${AUTH_APP_PORT}
      DB_HOST: db
    healthcheck:
      test: exit 0
      interval: 5s
      timeout: 2s
      retries: 10
      start_period: 60s

  migrator:
    build:
       context: .
       dockerfile: migrations/Dockerfile
       no_cache: true
    restart: on-failure
    environment:
      DB_HOST: db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${CHAT_SERVER_APP_DB}
    depends_on:
      app:
        condition: service_healthy
    healthcheck:
      test: migration.sh || exit 1
      interval: 5s
      timeout: 2s
      retries: 10
      start_period: 60s

networks:
  default:
    name: auth
    external: true
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.168.10.0/24
          gateway: 172.168.10.1

volumes:
  postgres: {}
  db: {}
  minio_storage: {}
  vault: {}
